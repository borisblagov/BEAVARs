var documenterSearchIndex = {"docs":
[{"location":"init_functions/#Additional-functions","page":"Additional functions","title":"Additional functions","text":"","category":"section"},{"location":"init_functions/#BEAVARs.ols-Tuple{Any, Any}","page":"Additional functions","title":"BEAVARs.ols","text":"ols(Y,X)\n\nPerforms standard linear regression on two matrices Y and X, returning β as a vector, the vector of residuals ε and the variance σ_sq\n\n\n\n\n\n","category":"method"},{"location":"init_functions/#BEAVARs.mlag-Tuple{Matrix{Float64}, Integer}","page":"Additional functions","title":"BEAVARs.mlag","text":"mlag(Yfull::Matrix{Float64},p::Integer)\nCreates lags of a matrix for a VAR representation with a constant on the right of X\n    Yfull: a matrix of dimensions T+p x N returns a matrix Y with dimensions TxN and X with dimenions Tx(N*p+1)\n\n\n\n\n\n","category":"method"},{"location":"init_functions/#BEAVARs.trainPriors-Tuple{Matrix{Float64}, Int64}","page":"Additional functions","title":"BEAVARs.trainPriors","text":"trainPriors(Z0::Matrix{Float64},p::Int64)\n\nIndependent AR(p) regressions with constant to estimate prior values for further Bayesian estimation\n\nFor a training sample Z0 with n variables and p lags the function will do column-wise n linear regressions of order p and return a matrix \n\ndeltaP has the constant on the bottom and the lags (1) to (p) in rows [1:end-1,:]\n\n\n\n\n\n","category":"method"},{"location":"init_functions/","page":"Additional functions","title":"Additional functions","text":"percentile_mat(A, p; dims)","category":"page"},{"location":"Chan2020csv/#Chan2020csv","page":"Chan2020csv","title":"Chan2020csv","text":"","category":"section"},{"location":"BGR2010/#BGR2010","page":"BGR2010","title":"BGR2010","text":"","category":"section"},{"location":"BGR2010/#Minnesota-prior-via-dummy-observations","page":"BGR2010","title":"Minnesota prior via dummy observations","text":"","category":"section"},{"location":"BGR2010/#BEAVARs.makeDummiesMinn!-Tuple{Vector{Float64}, Vector{Float64}, Any, Integer, Integer, Any, Any, Any}","page":"BGR2010","title":"BEAVARs.makeDummiesMinn!","text":"makeDummiesMinn!(sigma::Vector{Float64},delta,lambda,n::Integer,p::Integer,Y_d1))\n\nFills a matrix Y_d and X_d following eq. (5) in Banbura, Giannone, Reichling (2010), JAE, Large Bayesian Autoregressions. \n\nY_d =   beginbmatrix\n         diag(σ_1*δ_1 dots σ_N*δ_n)λ\r\n         mathbf0_n*(p-1) times n\r\n         diag(σ_1 dots σ_n)\r\n         mathbf0_1n times n\n         endbmatrix\n\nX_d = beginbmatrix\n        diag(1dotsp) otimes diag(σ_1 dots σ_n) λ quad mathbf0_n*p1\r\n        mathbf0_nn*p+1\r\n        mathbf0_1n*p  ε\r\n        endbmatrix\n\nInstad of creating the matrix every time, the function uses mutation on matrices called Y_d1 and X_d1.\n\nFor Y_d1 it is the the diagonal of the first (1:n,1:n) block and in the diagonal of the third block n+n*(p-1)+1:n+n*(p-1)+n\n\nFor X_d1 it is the diagonal of the first (n * p x n * p), esesntially X_d1 is populated along its diagonal and only the constant is added at the end\n\nfunction makeDummiesMinn!(sigma::Vector{Float64},delta::Vector{Float64},lambda,n::Integer,p::Integer,epsi,Y_d1,X_d1)\n    CI1_Yd1 = CartesianIndex.(1:n,1:n)  # These are the diagonal indices for the top block \n    CI2_Yd1 = CartesianIndex.(n+n*(p-1)+1:n+n*(p-1)+n,1:n)  # These are the diagonal indices for the block in the middle\n    CI_Xd1 = CartesianIndex.(1:n*p,1:n*p)\n    Y_d1[CI1_Yd1] = sigma.*delta./lambda;\n    Y_d1[CI2_Yd1] = sigma;\n    X_d1[end,end] = epsi;\n    X_d1[CI_Xd1]  = repeat(sigma./lambda,p).*repeat(1:p,inner=n)\n    return Y_d1, X_d1;\nend\n\n\n\n\n\n","category":"method"},{"location":"Chan2020iniw/#Chan2020iniw","page":"Chan2020iniw","title":"Chan2020iniw","text":"","category":"section"},{"location":"Chan2020minn/#Chan2020minn","page":"Chan2020minn","title":"Chan2020minn","text":"","category":"section"},{"location":"#BEAVARs.jl-Documentation","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"","category":"section"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"BEAVARs.jl: Bayesian Econometric Analysis using Vector Autoregressive models","category":"page"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"(Image: Credit Mikelde Ferro: https://www.youtube.com/watch?v=WIYQWK4pkqg&ab_channel=MikedelFerro-Music)","category":"page"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"This is a personal package implementing various Bayesian VARs for economic analysis and forecasting. ","category":"page"},{"location":"#Currently-implemented-VARs:","page":"BEAVARs.jl Documentation","title":"Currently implemented VARs:","text":"","category":"section"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"Chan2020minn: BVAR with classical  Minnesota prior (homoscedastic fixed variance-covariance matrix) as in Chan, J.C.C. (2020), Large Bayesian Vecotrautoregressions, P. Fuleky (Eds), Macroeconomic Forecasting in the Era of Big Data, 95-125, Springer, Cham, https://doi.org/10.1007/978-3-030-31150-6, see also joshuachan.org and his pdf.","category":"page"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"Chan2020csv: BVAR with Minnesota prior and common stochastic volatility (csv) as in Chan, J.C.C. (2020), Large Bayesian Vecotrautoregressions, P. Fuleky (Eds), Macroeconomic Forecasting in the Era of Big Data, 95-125, Springer, Cham, https://doi.org/10.1007/978-3-030-31150-6, see also joshuachan.org and his pdf.","category":"page"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"BGR2010: BVAR with dummy observations as in Banbura, M., Giannone, D., and Reichlin, L. (2010), Large Bayesian vecotr auto regressions, Journal of Applied Econometrics, Vol 25(1), doi.org/10.1002/jae.1137.","category":"page"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"Each model is contained in a separate function. See the documetnation for details. Note that notation follows the original reference. Consequently variable and parameter names are different across functions (e.g. lambda_1 in one paper can be c_1 in another). ","category":"page"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"Some codes have been translated from Matlab, so there is a lot of room for optimization. ","category":"page"},{"location":"#Notes-on-the-name","page":"BEAVARs.jl Documentation","title":"Notes on the name","text":"","category":"section"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"The name BEAVARs is an obvious play of words with a misspelled version of my favourite animal.\nIt is also a nod to the BEAR Toolbox - Bayesian  Estimation, Analysis and Regression, which is a powerful Matlab toolbox for estimating various VAR, BVAR, and Panel VAR models. While this is not an attempt to reach the size and scope of BEAR in the Julia ecosystem, there are some clear similarities in the idea of easy estimation of various models.\nFinally, the name does not conform to the widely accepted convention of naming Julia packages (Capital letter followed by all lowercase) but it doesn't break any rules either. It isn't the only package with more than one capita letter, e.g. FFT, CUDA, CSV etc. Also, because it's misspelled on purpose, the name Beaver.jl remains open, and if someone wants to use that we can still distinguish the packages BEAVARs.jl and Beavers.jl easily.","category":"page"},{"location":"#Acknowledgmenets","page":"BEAVARs.jl Documentation","title":"Acknowledgmenets","text":"","category":"section"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"I would like to thank Guillaume Dalle, who, even though it is not associated with this package went out of his way to help me get my first steps in Github and Julia optimization. Also, many users in the Julia discourse helped me often when I was struggling. This community is great.","category":"page"},{"location":"#References","page":"BEAVARs.jl Documentation","title":"References","text":"","category":"section"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"Banbura, Marta, Giannone, Domenico and Reichlin, Lucrezia, (2010), Large Bayesian vector auto regressions, Journal of Applied Econometrics, 25, issue 1, p. 71-92. https://doi.org/10.1002/jae.1137. ","category":"page"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"Chan, J.C.C. (2020), Large Bayesian Vecotrautoregressions, P. Fuleky (Eds), Macroeconomic Forecasting in the Era of Big Data, 95-125, Springer, Cham, https://doi.org/10.1007/978-3-030-31150-6","category":"page"},{"location":"#How-To-Use","page":"BEAVARs.jl Documentation","title":"How To Use","text":"","category":"section"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"Start with the manual","category":"page"},{"location":"#Documentation-for-the-models","page":"BEAVARs.jl Documentation","title":"Documentation for the models","text":"","category":"section"},{"location":"","page":"BEAVARs.jl Documentation","title":"BEAVARs.jl Documentation","text":"Pages = [\"BGR2010.md\", \"Chan2020minn.md\", \"Chan2020csv.md\"]\nDepth = 2","category":"page"},{"location":"Manual/#Manual","page":"How To","title":"Manual","text":"","category":"section"},{"location":"Manual/#Installation","page":"How To","title":"Installation","text":"","category":"section"},{"location":"Manual/","page":"How To","title":"How To","text":"Installing the package follows the typical Julia scheme","category":"page"},{"location":"Manual/","page":"How To","title":"How To","text":"pkg> add BEAVARs","category":"page"},{"location":"Manual/#Usage","page":"How To","title":"Usage","text":"","category":"section"},{"location":"Manual/","page":"How To","title":"How To","text":"The main function of the package is the function ","category":"page"},{"location":"Manual/","page":"How To","title":"How To","text":"beavar(model_type, data_strct, set_strct, hyp_strct)","category":"page"},{"location":"Manual/","page":"How To","title":"How To","text":"which calls the relevant models and performs the estimation. Using the package boils down to the correct specification of its arguments. Therefore, before jumping in details we will sketch what they are and how they are defined.","category":"page"},{"location":"Manual/","page":"How To","title":"How To","text":"model_type: A custom type of the package, i.e. a special object that allows Julia to know which function to call. \nhyp_strct:  A structure with hyperparameter values for the Bayesian estimation.\nset_strct: A structure with general VAR setup such as number of lags, number of draws, etc.\ndata_strct: A structure containing your data.","category":"page"},{"location":"CPZ2024/#CPZ2024","page":"CPZ2024","title":"CPZ2024","text":"","category":"section"}]
}
